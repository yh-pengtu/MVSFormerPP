# This file created by conda-build 24.3.0
# ------------------------------------------------

package:
  name: mamba
  version: 1.5.8
source:
  sha256: 6ddaf4b0758eb7ca1250f427bc40c2c3ede43257a60bac54e4320a4de66759a6
  url: https://github.com/mamba-org/mamba/archive/refs/tags/2024.03.25.tar.gz
build:
  entry_points:
    - mamba = mamba.mamba:main
  number: 0
  string: py39hcbb6966_0
requirements:
  host:
    - _libgcc_mutex 0.1 conda_forge
    - _openmp_mutex 4.5 2_gnu
    - bzip2 1.0.8 hd590300_5
    - ca-certificates 2024.2.2 hbcca054_0
    - expat 2.6.2 h59595ed_0
    - gdbm 1.18 h0a1914f_2
    - libexpat 2.6.2 h59595ed_0
    - libffi 3.4.2 h7f98852_5
    - libgcc-ng 13.2.0 h807b86a_5
    - libgomp 13.2.0 h807b86a_5
    - libmambapy 1.5.8 py39h2a80bf4_0
    - libsqlite 3.45.2 h2797004_0
    - libxcb 1.15 h0b41bf4_0
    - libzlib 1.2.13 hd590300_5
    - ncurses 6.4.20240210 h59595ed_0
    - openssl 3.2.1 hd590300_1
    - pip 24.0 pyhd8ed1ab_0
    - pthread-stubs 0.4 h36c2ea0_1001
    - pypy3.9 7.3.15 h9557127_1
    - python 3.9.18 1_73_pypy
    - python_abi 3.9 4_pypy39_pp73
    - readline 8.2 h8228510_1
    - setuptools 69.2.0 pyhd8ed1ab_0
    - sqlite 3.45.2 h2c6b66d_0
    - tk 8.6.13 noxft_h4845f30_101
    - tzdata 2024a h0c530f3_0
    - wheel 0.43.0 pyhd8ed1ab_0
    - xorg-kbproto 1.0.7 h7f98852_1002
    - xorg-libx11 1.8.7 h8ee46fc_0
    - xorg-libxau 1.0.11 hd590300_0
    - xorg-libxdmcp 1.1.3 h7f98852_0
    - xorg-xextproto 7.3.0 h0b41bf4_1003
    - xorg-xproto 7.0.31 h7f98852_1007
    - xz 5.2.6 h166bdaf_0
    - zlib 1.2.13 hd590300_5
  run:
    - conda >=24,<25
    - libmambapy 1.5.8 py39h2a80bf4_0
    - openssl >=3.2.1,<4.0a0
    - pypy3.9 >=7.3.15
    - python >=3.9,<3.10.0a0
    - python_abi 3.9 *_pypy39_pp73
test:
  commands:
    - mamba --help
    - test -f ${PREFIX}/etc/profile.d/mamba.sh
    - mamba create -n test_py2 python=2.7 --dry-run
    - mamba clean --all --dry-run
    - mamba repoquery whoneeds conda
    - mamba install xtensor xsimd -c conda-forge --dry-run
    - python -c "import mamba._version; assert mamba._version.__version__ == '1.5.8'"
    - test -f ${PREFIX}/condabin/mamba
  imports:
    - mamba
  requires:
    - pip
about:
  description: '

    [![Build Status](https://github.com/mamba-org/mamba/workflows/CI/badge.svg)](https://github.com/mamba-org/mamba/actions)

    [![Join the Gitter Chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mamba-org/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)

    [![docs](https://readthedocs.org/projects/mamba/badge/?version=latest&style=flat)](https://mamba.readthedocs.io/en/latest)


    `mamba` is a reimplementation of the conda package manager in C++.


    - parallel downloading of repository data and package files using multi-threading

    - libsolv for much faster dependency solving, a state of the art library used
    in the RPM package manager of Red Hat, Fedora and OpenSUSE

    - core parts of `mamba` are implemented in C++ for maximum efficiency


    At the same time, `mamba` utilizes the same command line parser, package installation
    and deinstallation code and transaction verification routines as `conda` to stay
    as compatible as possible.


    Mamba is part of a bigger ecosystem to make scientific packaging more sustainable.
    You can read our [announcement blog post](https://medium.com/@QuantStack/open-software-packaging-for-science-61cecee7fc23).

    The ecosystem also consists of `quetz`, an open source `conda` package server
    and `boa`, a fast `conda` package builder.



    Please refer to the [`mamba` and `micromamba` installation guide](https://mamba.readthedocs.io/en/latest/installation.html)
    in the documentation.



    `mamba` and `micromamba` come with features on top of stock `conda`.



    To efficiently query repositories and query package dependencies you can use `mamba
    repoquery` or `micromamba repoquery`.

    See the [repoquery documentation](https://mamba.readthedocs.io/en/latest/user_guide/mamba.html#repoquery)
    for details.



    `micromamba` can be used to install lock files generated by [conda-lock](https://conda-incubator.github.io/conda-lock/)
    without having to install `conda-lock`. Simply invoke e.g. `micromamba create
    -n my-env -f conda-lock.yml` with an environment lockfile named `*-lock.yml` or
    `*-lock.yaml`.

    '
  dev_url: https://github.com/mamba-org/mamba
  home: https://github.com/mamba-org/mamba
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: A fast drop-in alternative to conda, using libsolv for dependency resolution
extra:
  copy_test_source_files: true
  final: true
  flow_run_id: azure_20240325.4.1
  recipe-maintainers:
    - AntoinePrv
    - JohanMabille
    - SylvainCorlay
    - adriendelsalle
    - ericmjl
    - wolfv
  remote_url: https://github.com/conda-forge/mamba-feedstock
  sha: a3c12339b32b1d3efc19ac41db26f6bac7c96ef5
